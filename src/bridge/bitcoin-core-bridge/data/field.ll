; ModuleID = '<stdin>'
source_filename = "field.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @secp256k1_fe_mul_inner(i64* nocapture noundef writeonly %0, i64* nocapture noundef readonly %1, i64* noalias nocapture noundef readonly %2) local_unnamed_addr #0 {
  %4 = load i64, i64* %1, align 8, !tbaa !5
  %5 = getelementptr inbounds i64, i64* %1, i64 1
  %6 = load i64, i64* %5, align 8, !tbaa !5
  %7 = getelementptr inbounds i64, i64* %1, i64 2
  %8 = load i64, i64* %7, align 8, !tbaa !5
  %9 = getelementptr inbounds i64, i64* %1, i64 3
  %10 = load i64, i64* %9, align 8, !tbaa !5
  %11 = getelementptr inbounds i64, i64* %1, i64 4
  %12 = load i64, i64* %11, align 8, !tbaa !5
  %13 = zext i64 %4 to i128
  %14 = getelementptr inbounds i64, i64* %2, i64 3
  %15 = load i64, i64* %14, align 8, !tbaa !5
  %16 = zext i64 %15 to i128
  %17 = mul nuw nsw i128 %16, %13  
  %18 = zext i64 %6 to i128
  %19 = getelementptr inbounds i64, i64* %2, i64 2
  %20 = load i64, i64* %19, align 8, !tbaa !5
  %21 = zext i64 %20 to i128
  %22 = mul nuw nsw i128 %21, %18
  %23 = add nuw nsw i128 %22, %17
  %24 = zext i64 %8 to i128
  %25 = getelementptr inbounds i64, i64* %2, i64 1
  %26 = load i64, i64* %25, align 8, !tbaa !5
  %27 = zext i64 %26 to i128
  %28 = mul nuw nsw i128 %27, %24
  %29 = add nuw nsw i128 %23, %28
  %30 = zext i64 %10 to i128
  %31 = load i64, i64* %2, align 8, !tbaa !5
  %32 = zext i64 %31 to i128
  %33 = mul nuw nsw i128 %32, %30
  %34 = add nuw nsw i128 %29, %33
  %35 = zext i64 %12 to i128
  %36 = getelementptr inbounds i64, i64* %2, i64 4
  %37 = load i64, i64* %36, align 8, !tbaa !5
  %38 = zext i64 %37 to i128
  %39 = mul nuw nsw i128 %38, %35
  %40 = and i128 %39, 18446744073709551615
  %41 = mul nuw nsw i128 %40, 68719492368
  %42 = add nuw nsw i128 %34, %41
  %43 = lshr i128 %39, 64
  %44 = lshr i128 %42, 52
  %45 = mul nuw nsw i128 %38, %13
  %46 = mul nuw nsw i128 %16, %18
  %47 = mul nuw nsw i128 %21, %24
  %48 = mul nuw nsw i128 %27, %30
  %49 = mul nuw nsw i128 %32, %35
  %50 = mul nuw nsw i128 %43, 281475040739328
  %51 = add nuw i128 %47, %46
  %52 = add i128 %51, %48
  %53 = add i128 %52, %49
  %54 = add i128 %53, %45
  %55 = add i128 %54, %50
  %56 = add i128 %55, %44
  %57 = trunc i128 %56 to i64
  %58 = ashr i128 %56, 52
  %59 = lshr i64 %57, 48
  %60 = and i64 %59, 15
  %61 = mul nuw nsw i128 %32, %13
  %62 = mul nuw nsw i128 %38, %18
  %63 = mul nuw nsw i128 %16, %24
  %64 = mul nuw nsw i128 %21, %30
  %65 = mul nuw nsw i128 %27, %35
  %66 = add nuw i128 %64, %63
  %67 = add i128 %66, %65
  %68 = add i128 %67, %62
  %69 = add i128 %68, %58
  %70 = trunc i128 %69 to i64
  %71 = ashr i128 %69, 52
  %72 = shl i64 %70, 4
  %73 = and i64 %72, 72057594037927920
  %74 = or i64 %73, %60
  %75 = zext i64 %74 to i128
  %76 = mul nuw nsw i128 %75, 4294968273
  %77 = add nuw nsw i128 %76, %61
  %78 = trunc i128 %77 to i64
  %79 = and i64 %78, 4503599627370495
  store i64 %79, i64* %0, align 8, !tbaa !5
  %80 = lshr i128 %77, 52
  %81 = mul nuw nsw i128 %27, %13
  %82 = mul nuw nsw i128 %32, %18
  %83 = add nuw nsw i128 %82, %81
  %84 = mul nuw nsw i128 %38, %24
  %85 = mul nuw nsw i128 %16, %30
  %86 = mul nuw nsw i128 %21, %35
  %87 = add nuw i128 %86, %85
  %88 = add i128 %87, %84
  %89 = add i128 %88, %71
  %90 = and i128 %89, 4503599627370495
  %91 = mul nuw nsw i128 %90, 68719492368
  %92 = add nuw i128 %83, %91
  %93 = add i128 %92, %80
  %94 = ashr i128 %89, 52
  %95 = trunc i128 %93 to i64
  %96 = and i64 %95, 4503599627370495
  %97 = getelementptr inbounds i64, i64* %0, i64 1
  store i64 %96, i64* %97, align 8, !tbaa !5
  %98 = lshr i128 %93, 52
  %99 = mul nuw nsw i128 %21, %13
  %100 = mul nuw nsw i128 %27, %18
  %101 = add nuw nsw i128 %100, %99
  %102 = mul nuw nsw i128 %32, %24
  %103 = add nuw nsw i128 %101, %102
  %104 = mul nuw nsw i128 %38, %30
  %105 = mul nuw nsw i128 %16, %35
  %106 = add nuw nsw i128 %104, %105
  %107 = add nsw i128 %106, %94
  %108 = and i128 %107, 18446744073709551615
  %109 = mul nuw nsw i128 %108, 68719492368
  %110 = add nuw i128 %103, %109
  %111 = add i128 %110, %98
  %112 = lshr i128 %107, 64
  %113 = trunc i128 %111 to i64
  %114 = and i64 %113, 4503599627370495
  %115 = getelementptr inbounds i64, i64* %0, i64 2
  store i64 %114, i64* %115, align 8, !tbaa !5
  %116 = lshr i128 %111, 52
  %117 = mul nuw nsw i128 %112, 281475040739328
  %118 = and i128 %42, 4503599627370495
  %119 = add nuw nsw i128 %117, %118
  %120 = add nuw nsw i128 %119, %116
  %121 = trunc i128 %120 to i64
  %122 = and i64 %121, 4503599627370495
  %123 = getelementptr inbounds i64, i64* %0, i64 3
  store i64 %122, i64* %123, align 8, !tbaa !5
  %124 = lshr i128 %120, 52
  %125 = and i128 %56, 281474976710655
  %126 = add nuw nsw i128 %124, %125
  %127 = trunc i128 %126 to i64
  %128 = getelementptr inbounds i64, i64* %0, i64 4
  store i64 %127, i64* %128, align 8, !tbaa !5
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable willreturn
define dso_local void @secp256k1_fe_sqr_inner(i64* nocapture noundef writeonly %0, i64* nocapture noundef readonly %1) local_unnamed_addr #0 {
  %3 = load i64, i64* %1, align 8, !tbaa !5
  %4 = getelementptr inbounds i64, i64* %1, i64 1
  %5 = load i64, i64* %4, align 8, !tbaa !5
  %6 = getelementptr inbounds i64, i64* %1, i64 2
  %7 = load i64, i64* %6, align 8, !tbaa !5
  %8 = getelementptr inbounds i64, i64* %1, i64 3
  %9 = load i64, i64* %8, align 8, !tbaa !5
  %10 = getelementptr inbounds i64, i64* %1, i64 4
  %11 = load i64, i64* %10, align 8, !tbaa !5
  %12 = shl i64 %3, 1
  %13 = zext i64 %12 to i128
  %14 = zext i64 %9 to i128
  %15 = mul nuw nsw i128 %14, %13
  %16 = shl i64 %5, 1
  %17 = zext i64 %16 to i128
  %18 = zext i64 %7 to i128
  %19 = mul nuw nsw i128 %17, %18
  %20 = add nuw nsw i128 %15, %19
  %21 = zext i64 %11 to i128
  %22 = mul nuw nsw i128 %21, %21
  %23 = and i128 %22, 18446744073709551615
  %24 = mul nuw nsw i128 %23, 68719492368
  %25 = add nuw nsw i128 %20, %24
  %26 = lshr i128 %22, 64
  %27 = lshr i128 %25, 52
  %28 = shl i64 %11, 1
  %29 = zext i64 %3 to i128
  %30 = zext i64 %28 to i128
  %31 = mul nuw nsw i128 %30, %29
  %32 = mul nuw nsw i128 %14, %17
  %33 = mul nuw nsw i128 %18, %18
  %34 = mul nuw nsw i128 %26, 281475040739328
  %35 = add nuw i128 %32, %33
  %36 = add i128 %35, %31
  %37 = add i128 %36, %34
  %38 = add i128 %37, %27
  %39 = trunc i128 %38 to i64
  %40 = lshr i128 %38, 52
  %41 = lshr i64 %39, 48
  %42 = and i64 %41, 15
  %43 = mul nuw nsw i128 %29, %29
  %44 = zext i64 %5 to i128
  %45 = mul nuw nsw i128 %30, %44
  %46 = shl i64 %7, 1
  %47 = zext i64 %46 to i128
  %48 = mul nuw nsw i128 %47, %14
  %49 = add nuw nsw i128 %45, %48
  %50 = add nuw nsw i128 %49, %40
  %51 = trunc i128 %50 to i64
  %52 = lshr i128 %50, 52
  %53 = shl i64 %51, 4
  %54 = and i64 %53, 72057594037927920
  %55 = or i64 %54, %42
  %56 = zext i64 %55 to i128
  %57 = mul nuw nsw i128 %56, 4294968273
  %58 = add nuw nsw i128 %57, %43
  %59 = trunc i128 %58 to i64
  %60 = and i64 %59, 4503599627370495
  store i64 %60, i64* %0, align 8, !tbaa !5
  %61 = lshr i128 %58, 52
  %62 = mul nuw nsw i128 %13, %44
  %63 = mul nuw nsw i128 %30, %18
  %64 = mul nuw nsw i128 %14, %14
  %65 = add nuw nsw i128 %63, %64
  %66 = add nuw nsw i128 %65, %52
  %67 = and i128 %66, 4503599627370495
  %68 = mul nuw nsw i128 %67, 68719492368
  %69 = add nuw i128 %68, %62
  %70 = add i128 %69, %61
  %71 = lshr i128 %66, 52
  %72 = trunc i128 %70 to i64
  %73 = and i64 %72, 4503599627370495
  %74 = getelementptr inbounds i64, i64* %0, i64 1
  store i64 %73, i64* %74, align 8, !tbaa !5
  %75 = lshr i128 %70, 52
  %76 = mul nuw nsw i128 %18, %13
  %77 = mul nuw nsw i128 %44, %44
  %78 = add nuw nsw i128 %76, %77
  %79 = mul nuw nsw i128 %30, %14
  %80 = add nuw nsw i128 %71, %79
  %81 = and i128 %80, 18446744073709551615
  %82 = mul nuw nsw i128 %81, 68719492368
  %83 = add nuw i128 %78, %82
  %84 = add i128 %83, %75
  %85 = lshr i128 %80, 64
  %86 = trunc i128 %84 to i64
  %87 = and i64 %86, 4503599627370495
  %88 = getelementptr inbounds i64, i64* %0, i64 2
  store i64 %87, i64* %88, align 8, !tbaa !5
  %89 = lshr i128 %84, 52
  %90 = mul nuw nsw i128 %85, 281475040739328
  %91 = and i128 %25, 4503599627370494
  %92 = add nuw nsw i128 %90, %91
  %93 = add nuw nsw i128 %92, %89
  %94 = trunc i128 %93 to i64
  %95 = and i64 %94, 4503599627370495
  %96 = getelementptr inbounds i64, i64* %0, i64 3
  store i64 %95, i64* %96, align 8, !tbaa !5
  %97 = lshr i128 %93, 52
  %98 = and i128 %38, 281474976710655
  %99 = add nuw nsw i128 %97, %98
  %100 = trunc i128 %99 to i64
  %101 = getelementptr inbounds i64, i64* %0, i64 4
  store i64 %100, i64* %101, align 8, !tbaa !5
  ret void
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind uwtable willreturn "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 1}
!4 = !{!"Ubuntu clang version 14.0.0-1ubuntu1.1"}
!5 = !{!6, !6, i64 0}
!6 = !{!"long", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
