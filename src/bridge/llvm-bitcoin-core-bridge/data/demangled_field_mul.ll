; ModuleID = 'field.b5946210e27f6df2-cgu.0'
source_filename = "field.b5946210e27f6df2-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"
; field::secp256k1_fe_mul_inner
; Function Attrs: mustprogress nofree norecurse nosync nounwind nonlazybind willreturn memory(argmem: readwrite) uwtable
define void @secp256k1_fe_mul_inner(ptr noalias nocapture noundef writeonly align 8 dereferenceable(40) %r, ptr noalias nocapture noundef readonly align 8 dereferenceable(40) %a, ptr noalias nocapture noundef readonly align 8 dereferenceable(40) %b) unnamed_addr #0 {
start:
  %a0 = load i64, ptr %a, align 8, !noundef !3
  %0 = getelementptr inbounds [5 x i64], ptr %a, i64 0, i64 1
  %a1 = load i64, ptr %0, align 8, !noundef !3
  %1 = getelementptr inbounds [5 x i64], ptr %a, i64 0, i64 2
  %a2 = load i64, ptr %1, align 8, !noundef !3
  %2 = getelementptr inbounds [5 x i64], ptr %a, i64 0, i64 3
  %a3 = load i64, ptr %2, align 8, !noundef !3
  %3 = getelementptr inbounds [5 x i64], ptr %a, i64 0, i64 4
  %a4 = load i64, ptr %3, align 8, !noundef !3
  %_18 = zext i64 %a0 to i128
  %4 = getelementptr inbounds [5 x i64], ptr %b, i64 0, i64 3
  %_20 = load i64, ptr %4, align 8, !noundef !3
  %_19 = zext i64 %_20 to i128
  %_17 = mul nuw i128 %_19, %_18
  %_22 = zext i64 %a1 to i128
  %5 = getelementptr inbounds [5 x i64], ptr %b, i64 0, i64 2
  %_24 = load i64, ptr %5, align 8, !noundef !3
  %_23 = zext i64 %_24 to i128
  %_21 = mul nuw i128 %_23, %_22
  %_16 = add i128 %_21, %_17
  %_26 = zext i64 %a2 to i128
  %6 = getelementptr inbounds [5 x i64], ptr %b, i64 0, i64 1
  %_28 = load i64, ptr %6, align 8, !noundef !3
  %_27 = zext i64 %_28 to i128
  %_25 = mul nuw i128 %_27, %_26
  %_15 = add i128 %_16, %_25
  %_30 = zext i64 %a3 to i128
  %_32 = load i64, ptr %b, align 8, !noundef !3
  %_31 = zext i64 %_32 to i128
  %_29 = mul nuw i128 %_31, %_30
  %7 = add i128 %_15, %_29
  %_33 = zext i64 %a4 to i128
  %8 = getelementptr inbounds [5 x i64], ptr %b, i64 0, i64 4
  %_35 = load i64, ptr %8, align 8, !noundef !3
  %_34 = zext i64 %_35 to i128
  %9 = mul nuw i128 %_34, %_33
  %_37 = and i128 %9, 18446744073709551615
  %_36 = mul nuw nsw i128 %_37, 68719492368
  %10 = add i128 %7, %_36
  %11 = lshr i128 %9, 64
  %12 = lshr i128 %10, 52
  %_46 = mul nuw i128 %_34, %_18
  %_50 = mul nuw i128 %_19, %_22
  %_54 = mul nuw i128 %_23, %_26
  %_58 = mul nuw i128 %_27, %_30
  %_62 = mul nuw i128 %_31, %_33
  %_66 = mul nuw nsw i128 %11, 281475040739328
  %_45 = add i128 %_54, %_50
  %_44 = add i128 %_45, %_58
  %_43 = add i128 %_44, %_62
  %_42 = add i128 %_43, %_46
  %13 = add i128 %_42, %_66
  %14 = add i128 %13, %12
  %15 = trunc i128 %14 to i64
  %16 = lshr i128 %14, 52
  %tx = lshr i64 %15, 48
  %17 = mul nuw i128 %_31, %_18
  %_79 = mul nuw i128 %_34, %_22
  %_83 = mul nuw i128 %_19, %_26
  %_87 = mul nuw i128 %_23, %_30
  %_91 = mul nuw i128 %_27, %_33
  %_78 = add i128 %_87, %_83
  %_77 = add i128 %_78, %_91
  %_76 = add i128 %_77, %_79
  %18 = add i128 %_76, %16
  %19 = trunc i128 %18 to i64
  %20 = lshr i128 %18, 52
  %_97 = shl i64 %19, 4
  %21 = or i64 %_97, %tx
  %_100 = zext i64 %21 to i128
  %_99 = mul nuw nsw i128 %_100, 4294968273
  %22 = add i128 %_99, %17
  %23 = trunc i128 %22 to i64
  store i64 %23, ptr %r, align 8
  %24 = lshr i128 %22, 52
  %_105 = mul nuw i128 %_27, %_18
  %_109 = mul nuw i128 %_31, %_22
  %_104 = add i128 %_109, %_105
  %_115 = mul nuw i128 %_34, %_26
  %_119 = mul nuw i128 %_19, %_30
  %_123 = mul nuw i128 %_23, %_33
  %_114 = add i128 %_123, %_119
  %_113 = add i128 %_114, %_115
  %25 = add i128 %_113, %20
  %_128 = and i128 %25, 18446744073709551615
  %_127 = mul nuw nsw i128 %_128, 68719492368
  %26 = add i128 %_104, %_127
  %27 = add i128 %26, %24
  %28 = lshr i128 %25, 52
  %29 = getelementptr inbounds [5 x i64], ptr %r, i64 0, i64 1
  %30 = trunc i128 %27 to i64
  store i64 %30, ptr %29, align 8
  %31 = lshr i128 %27, 52
  %_136 = mul nuw i128 %_23, %_18
  %_140 = mul nuw i128 %_27, %_22
  %_135 = add i128 %_140, %_136
  %_144 = mul nuw i128 %_31, %_26
  %_134 = add i128 %_135, %_144
  %_149 = mul nuw i128 %_34, %_30
  %_153 = mul nuw i128 %_19, %_33
  %_148 = add i128 %_149, %_153
  %32 = add i128 %_148, %28
  %_158 = and i128 %32, 18446744073709551615
  %_157 = mul nuw nsw i128 %_158, 68719492368
  %33 = add i128 %_134, %_157
  %34 = add i128 %33, %31
  %35 = lshr i128 %32, 64
  %36 = getelementptr inbounds [5 x i64], ptr %r, i64 0, i64 2
  %37 = trunc i128 %34 to i64
  store i64 %37, ptr %36, align 8
  %38 = lshr i128 %34, 52
  %_164 = mul nuw nsw i128 %35, 281475040739328
  %_168 = and i128 %10, 18446744073709551615
  %_163 = add nuw nsw i128 %_164, %_168
  %39 = add nuw nsw i128 %_163, %38
  %40 = getelementptr inbounds [5 x i64], ptr %r, i64 0, i64 3
  %41 = trunc i128 %39 to i64
  store i64 %41, ptr %40, align 8
  %42 = lshr i128 %39, 52
  %_171 = and i128 %14, 1152921504606846975
  %43 = add nuw nsw i128 %42, %_171
  %44 = getelementptr inbounds [5 x i64], ptr %r, i64 0, i64 4
  %45 = trunc i128 %43 to i64
  store i64 %45, ptr %44, align 8
  ret void
}
!3 = !{}
